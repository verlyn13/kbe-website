name: Test Suite

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - 'backups/**'
  push:
    branches:
      - 'feature/**'
      - 'fix/**'
      - 'chore/**'
      - 'test/**'
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run with debug logging'
        required: false
        default: false

concurrency:
  group: test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Type Check & Test
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Type Check (non-blocking)
        run: npm run typecheck
        continue-on-error: true

      - name: Run Tests (informational)
        run: npm run test:ci
        env:
          CI: true
        continue-on-error: true

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            coverage/
            test-results/

      - name: Comment PR with Results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = 'âœ… Tests completed';
            try {
              const resultsPath = 'test-results/results.json';
              if (fs.existsSync(resultsPath)) {
                const data = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
                summary = `Tests: ${data.numTotalTests}, Passed: ${data.numPassedTests}, Failed: ${data.numFailedTests}`;
              }
            } catch (e) {}
            const body = `## Test Results\n${summary}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body,
            });
