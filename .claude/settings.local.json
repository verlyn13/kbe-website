{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(firebase --version)",
      "Bash(firebase use:*)",
      "Bash(firebase hosting:sites:*)",
      "Bash(firebase apphosting:backends:list:*)",
      "Bash(firebase functions:log:*)",
      "Bash(firebase apphosting:backends:get:*)",
      "Bash(firebase apphosting:backends:describe:*)",
      "Bash(firebase init:*)",
      "Bash(gh workflow:*)",
      "Bash(firebase apphosting:secrets:grantaccess:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(gcloud builds list:*)",
      "Bash(gcloud logging read:*)",
      "Bash(gcloud config get-value:*)",
      "Bash(firebase apphosting:rollouts:create:*)",
      "Bash(npm uninstall:*)",
      "Bash(firebase projects:list:*)",
      "Bash(firebase auth:export:*)",
      "Bash(gcloud auth:*)",
      "Bash(true)",
      "Bash(firebase emulators:start:*)",
      "Bash(./scripts/check-firebase-auth.sh:*)",
      "Bash(npm run dev:*)",
      "mcp__ide__getDiagnostics",
      "Bash(curl:*)",
      "Bash(gcloud config configurations:*)",
      "Bash(gcloud config set:*)",
      "Bash(gh run list:*)",
      "Bash(cat:*)",
      "Bash(npm audit:*)",
      "Bash(grep:*)",
      "Bash(npm test:*)",
      "Bash(npx eslint:*)",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(~/bin/codex-wrap:*)",
      "Bash(git fetch:*)",
      "Bash(gcloud api-keys list:*)",
      "Bash(gcloud services api-keys list:*)",
      "Bash(gcloud services api-keys update:*)",
      "Bash(git reset:*)",
      "Bash(git push:*)",
      "Bash(gcloud secrets describe:*)",
      "Bash(gcloud projects describe:*)",
      "Bash(gcloud secrets add-iam-policy-binding:*)",
      "Bash(git checkout:*)",
      "Bash(git pull:*)",
      "Bash(gcloud secrets get-iam-policy:*)",
      "Bash(gcloud secrets versions list:*)",
      "Bash(gcloud iam service-accounts list:*)",
      "Bash(NEXT_PUBLIC_FIREBASE_API_KEY )",
      "Bash(NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN )",
      "Bash(NEXT_PUBLIC_FIREBASE_PROJECT_ID )",
      "Bash(NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET )",
      "Bash(NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID )",
      "Bash(NEXT_PUBLIC_FIREBASE_APP_ID )",
      "Bash(NEXT_PUBLIC_APP_URL )",
      "Bash(SENDGRID_TEMPLATE_MAGIC_LINK )",
      "Bash(SENDGRID_TEMPLATE_WELCOME )",
      "Bash(SENDGRID_TEMPLATE_PASSWORD_RESET )",
      "Bash(SENDGRID_TEMPLATE_ANNOUNCEMENT )",
      "Bash(SENDGRID_TEMPLATE_REGISTRATION_CONFIRMATION )",
      "Bash(NEXT_PUBLIC_RECAPTCHA_ENTERPRISE_SITE_KEY)",
      "Bash(do)",
      "Bash(done)",
      "Bash(nslookup:*)",
      "Bash(gcloud run services list:*)",
      "Bash(gcloud run services describe:*)",
      "Bash(cf-go dns list:*)",
      "Bash(/dev/null)",
      "Bash(cf-go dns delete:*)",
      "Bash(cf-go dns:*)",
      "Bash(cf:*)",
      "Bash(dig:*)",
      "Bash(gcloud run domain-mappings list:*)",
      "Bash(gcloud beta run domain-mappings list:*)",
      "Bash(gcloud run domain-mappings create:*)",
      "Bash(gcloud beta run domain-mappings create:*)",
      "Bash(firebase hosting:channel:list:*)",
      "Bash(firebase help:*)",
      "Bash(gcloud domains verify:*)",
      "Bash(gcloud domains list-user-verified:*)",
      "Bash(gcloud services enable:*)",
      "Bash(for ip in 216.239.32.21 216.239.34.21 216.239.36.21 216.239.38.21)",
      "Bash(echo:*)",
      "Bash(gcloud beta run domain-mappings describe:*)",
      "Bash(npx:*)",
      "Bash(sed:*)"
    ],
    "deny": []
  }
}